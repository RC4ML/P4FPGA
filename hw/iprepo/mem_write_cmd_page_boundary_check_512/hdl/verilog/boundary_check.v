// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module boundary_check (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        pageOffsetFifo_V_dout,
        pageOffsetFifo_V_empty_n,
        pageOffsetFifo_V_read,
        cmdOut_V_TREADY,
        cmdOut_V_TDATA,
        cmdOut_V_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] pageOffsetFifo_V_dout;
input   pageOffsetFifo_V_empty_n;
output   pageOffsetFifo_V_read;
input   cmdOut_V_TREADY;
output  [95:0] cmdOut_V_TDATA;
output   cmdOut_V_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pageOffsetFifo_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] bc_state_load_load_fu_181_p1;
wire   [0:0] tmp_nbreadreq_fu_74_p3;
reg    ap_predicate_op10_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] bc_state_load_reg_350;
reg   [0:0] tmp_reg_364;
reg   [0:0] icmp_ln895_1_reg_389;
reg    ap_predicate_op32_write_state2;
reg    ap_predicate_op36_write_state2;
reg   [0:0] icmp_ln895_reg_393;
reg    ap_predicate_op43_write_state2;
reg    ap_predicate_op45_write_state2;
reg    ap_block_state2_io;
wire    regslice_both_cmdOut_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] bc_state_load_reg_350_pp0_iter1_reg;
reg   [0:0] tmp_reg_364_pp0_iter1_reg;
reg   [0:0] icmp_ln895_1_reg_389_pp0_iter1_reg;
reg    ap_predicate_op58_write_state3;
reg    ap_predicate_op59_write_state3;
reg   [0:0] icmp_ln895_reg_393_pp0_iter1_reg;
reg    ap_predicate_op60_write_state3;
reg    ap_predicate_op61_write_state3;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] bc_state;
reg   [47:0] cmd_addr_V;
reg   [31:0] cmd_len_V;
reg    cmdOut_V_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    pageOffsetFifo_V_blk_n;
reg   [0:0] cmd_addr_V_flag_2_i_reg_95;
reg   [47:0] cmd_load_reg_354;
reg   [31:0] tmp_len_V_reg_359;
wire   [47:0] trunc_ln321_fu_193_p1;
reg   [47:0] trunc_ln321_reg_368;
wire   [31:0] tmp_len_V_2_fu_197_p4;
reg   [31:0] tmp_len_V_2_reg_375;
reg   [23:0] tmp_new_length_V_loa_reg_382;
wire   [0:0] icmp_ln895_1_fu_241_p2;
wire   [0:0] icmp_ln895_fu_253_p2;
wire   [47:0] add_ln700_fu_259_p2;
wire   [31:0] add_ln701_fu_265_p2;
wire   [95:0] tmp_2_fu_280_p3;
wire   [95:0] tmp_1_fu_298_p1;
wire   [95:0] tmp_4_fu_321_p3;
wire   [95:0] tmp_3_fu_329_p3;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_cmd_addr_V_flag_2_i_phi_fu_98_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_cmd_addr_V_flag_2_i_reg_95;
wire   [47:0] ap_phi_reg_pp0_iter0_cmd_addr_V_new_2_i_reg_107;
reg   [47:0] ap_phi_reg_pp0_iter1_cmd_addr_V_new_2_i_reg_107;
wire   [31:0] ap_phi_reg_pp0_iter0_cmd_len_V_new_2_i_reg_118;
reg   [31:0] ap_phi_reg_pp0_iter1_cmd_len_V_new_2_i_reg_118;
reg   [0:0] ap_phi_mux_cmd_addr_V_flag_3_i_phi_fu_134_p8;
reg   [0:0] ap_phi_reg_pp0_iter1_cmd_addr_V_flag_3_i_reg_129;
wire   [0:0] ap_phi_reg_pp0_iter0_cmd_addr_V_flag_3_i_reg_129;
reg   [47:0] ap_phi_mux_cmd_addr_V_new_3_i_phi_fu_153_p8;
reg   [47:0] ap_phi_reg_pp0_iter1_cmd_addr_V_new_3_i_reg_149;
wire   [47:0] ap_phi_reg_pp0_iter0_cmd_addr_V_new_3_i_reg_149;
wire   [47:0] add_ln700_1_fu_306_p2;
reg   [31:0] ap_phi_mux_cmd_len_V_new_3_i_phi_fu_169_p8;
reg   [31:0] ap_phi_reg_pp0_iter1_cmd_len_V_new_3_i_reg_165;
wire   [31:0] ap_phi_reg_pp0_iter0_cmd_len_V_new_3_i_reg_165;
wire   [31:0] sub_ln701_fu_312_p2;
reg   [47:0] ap_sig_allocacmp_cmd_load;
reg   [31:0] ap_sig_allocacmp_tmp_len_V;
reg    ap_block_pp0_stage0_01001;
wire   [23:0] tmp_page_offset_V_lo_fu_207_p4;
wire   [32:0] lhs_V_fu_227_p1;
wire   [32:0] rhs_V_fu_231_p1;
wire   [32:0] ret_V_fu_235_p2;
wire   [63:0] tmp_addr_V_1_fu_277_p1;
wire   [87:0] tmp_5_i_fu_291_p3;
wire   [47:0] zext_ln700_fu_303_p1;
wire   [31:0] tmp_len_V_1_fu_288_p1;
wire   [63:0] tmp_addr_V_fu_318_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg   [95:0] cmdOut_V_TDATA_int;
reg    cmdOut_V_TVALID_int;
wire    cmdOut_V_TREADY_int;
wire    regslice_both_cmdOut_V_U_vld_out;
reg    ap_condition_251;
reg    ap_condition_140;
reg    ap_condition_263;
reg    ap_condition_281;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 bc_state = 1'd0;
#0 cmd_addr_V = 48'd0;
#0 cmd_len_V = 32'd0;
end

regslice_both #(
    .DataWidth( 96 ))
regslice_both_cmdOut_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(cmdOut_V_TDATA_int),
    .vld_in(cmdOut_V_TVALID_int),
    .ack_in(cmdOut_V_TREADY_int),
    .data_out(cmdOut_V_TDATA),
    .vld_out(regslice_both_cmdOut_V_U_vld_out),
    .ack_out(cmdOut_V_TREADY),
    .apdone_blk(regslice_both_cmdOut_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if ((1'b1 == ap_condition_251)) begin
            ap_phi_reg_pp0_iter1_cmd_addr_V_flag_3_i_reg_129 <= 1'd1;
        end else if (((tmp_nbreadreq_fu_74_p3 == 1'd0) & (bc_state == 1'd0))) begin
            ap_phi_reg_pp0_iter1_cmd_addr_V_flag_3_i_reg_129 <= 1'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cmd_addr_V_flag_3_i_reg_129 <= ap_phi_reg_pp0_iter0_cmd_addr_V_flag_3_i_reg_129;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if (((icmp_ln895_fu_253_p2 == 1'd1) & (bc_state_load_load_fu_181_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_cmd_addr_V_new_2_i_reg_107 <= add_ln700_fu_259_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cmd_addr_V_new_2_i_reg_107 <= ap_phi_reg_pp0_iter0_cmd_addr_V_new_2_i_reg_107;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if ((1'b1 == ap_condition_251)) begin
            ap_phi_reg_pp0_iter1_cmd_addr_V_new_3_i_reg_149 <= trunc_ln321_fu_193_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cmd_addr_V_new_3_i_reg_149 <= ap_phi_reg_pp0_iter0_cmd_addr_V_new_3_i_reg_149;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if (((icmp_ln895_fu_253_p2 == 1'd1) & (bc_state_load_load_fu_181_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_cmd_len_V_new_2_i_reg_118 <= add_ln701_fu_265_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cmd_len_V_new_2_i_reg_118 <= ap_phi_reg_pp0_iter0_cmd_len_V_new_2_i_reg_118;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if ((1'b1 == ap_condition_251)) begin
            ap_phi_reg_pp0_iter1_cmd_len_V_new_3_i_reg_165 <= {{pageOffsetFifo_V_dout[79:48]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_cmd_len_V_new_3_i_reg_165 <= ap_phi_reg_pp0_iter0_cmd_len_V_new_3_i_reg_165;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if ((bc_state_load_load_fu_181_p1 == 1'd1)) begin
            bc_state <= ap_phi_mux_cmd_addr_V_flag_2_i_phi_fu_98_p4;
        end else if ((1'b1 == ap_condition_263)) begin
            bc_state <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_140)) begin
        if (((icmp_ln895_fu_253_p2 == 1'd0) & (bc_state_load_load_fu_181_p1 == 1'd1))) begin
            cmd_addr_V_flag_2_i_reg_95 <= 1'd0;
        end else if (((icmp_ln895_fu_253_p2 == 1'd1) & (bc_state_load_load_fu_181_p1 == 1'd1))) begin
            cmd_addr_V_flag_2_i_reg_95 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            cmd_addr_V_flag_2_i_reg_95 <= ap_phi_reg_pp0_iter0_cmd_addr_V_flag_2_i_reg_95;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bc_state_load_reg_350 <= bc_state;
        bc_state_load_reg_350_pp0_iter1_reg <= bc_state_load_reg_350;
        cmd_load_reg_354 <= ap_sig_allocacmp_cmd_load;
        icmp_ln895_1_reg_389_pp0_iter1_reg <= icmp_ln895_1_reg_389;
        icmp_ln895_reg_393_pp0_iter1_reg <= icmp_ln895_reg_393;
        tmp_len_V_reg_359 <= ap_sig_allocacmp_tmp_len_V;
        tmp_reg_364_pp0_iter1_reg <= tmp_reg_364;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_cmd_addr_V_flag_3_i_phi_fu_134_p8 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cmd_addr_V <= ap_phi_mux_cmd_addr_V_new_3_i_phi_fu_153_p8;
        cmd_len_V <= ap_phi_mux_cmd_len_V_new_3_i_phi_fu_169_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_74_p3 == 1'd1) & (bc_state == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln895_1_reg_389 <= icmp_ln895_1_fu_241_p2;
        tmp_len_V_2_reg_375 <= {{pageOffsetFifo_V_dout[79:48]}};
        tmp_new_length_V_loa_reg_382 <= {{pageOffsetFifo_V_dout[127:104]}};
        trunc_ln321_reg_368 <= trunc_ln321_fu_193_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((bc_state_load_load_fu_181_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln895_reg_393 <= icmp_ln895_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bc_state == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_364 <= tmp_nbreadreq_fu_74_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((bc_state_load_load_fu_181_p1 == 1'd1)) begin
        if ((icmp_ln895_fu_253_p2 == 1'd0)) begin
            ap_phi_mux_cmd_addr_V_flag_2_i_phi_fu_98_p4 = 1'd0;
        end else if ((icmp_ln895_fu_253_p2 == 1'd1)) begin
            ap_phi_mux_cmd_addr_V_flag_2_i_phi_fu_98_p4 = 1'd1;
        end else begin
            ap_phi_mux_cmd_addr_V_flag_2_i_phi_fu_98_p4 = ap_phi_reg_pp0_iter0_cmd_addr_V_flag_2_i_reg_95;
        end
    end else begin
        ap_phi_mux_cmd_addr_V_flag_2_i_phi_fu_98_p4 = ap_phi_reg_pp0_iter0_cmd_addr_V_flag_2_i_reg_95;
    end
end

always @ (*) begin
    if (((icmp_ln895_1_reg_389 == 1'd1) & (tmp_reg_364 == 1'd1) & (bc_state_load_reg_350 == 1'd0))) begin
        ap_phi_mux_cmd_addr_V_flag_3_i_phi_fu_134_p8 = 1'd1;
    end else if ((bc_state_load_reg_350 == 1'd1)) begin
        ap_phi_mux_cmd_addr_V_flag_3_i_phi_fu_134_p8 = cmd_addr_V_flag_2_i_reg_95;
    end else begin
        ap_phi_mux_cmd_addr_V_flag_3_i_phi_fu_134_p8 = ap_phi_reg_pp0_iter1_cmd_addr_V_flag_3_i_reg_129;
    end
end

always @ (*) begin
    if (((icmp_ln895_1_reg_389 == 1'd1) & (tmp_reg_364 == 1'd1) & (bc_state_load_reg_350 == 1'd0))) begin
        ap_phi_mux_cmd_addr_V_new_3_i_phi_fu_153_p8 = add_ln700_1_fu_306_p2;
    end else if ((bc_state_load_reg_350 == 1'd1)) begin
        ap_phi_mux_cmd_addr_V_new_3_i_phi_fu_153_p8 = ap_phi_reg_pp0_iter1_cmd_addr_V_new_2_i_reg_107;
    end else begin
        ap_phi_mux_cmd_addr_V_new_3_i_phi_fu_153_p8 = ap_phi_reg_pp0_iter1_cmd_addr_V_new_3_i_reg_149;
    end
end

always @ (*) begin
    if (((icmp_ln895_1_reg_389 == 1'd1) & (tmp_reg_364 == 1'd1) & (bc_state_load_reg_350 == 1'd0))) begin
        ap_phi_mux_cmd_len_V_new_3_i_phi_fu_169_p8 = sub_ln701_fu_312_p2;
    end else if ((bc_state_load_reg_350 == 1'd1)) begin
        ap_phi_mux_cmd_len_V_new_3_i_phi_fu_169_p8 = ap_phi_reg_pp0_iter1_cmd_len_V_new_2_i_reg_118;
    end else begin
        ap_phi_mux_cmd_len_V_new_3_i_phi_fu_169_p8 = ap_phi_reg_pp0_iter1_cmd_len_V_new_3_i_reg_165;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cmd_addr_V_flag_3_i_phi_fu_134_p8 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_cmd_load = ap_phi_mux_cmd_addr_V_new_3_i_phi_fu_153_p8;
    end else begin
        ap_sig_allocacmp_cmd_load = cmd_addr_V;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cmd_addr_V_flag_3_i_phi_fu_134_p8 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_tmp_len_V = ap_phi_mux_cmd_len_V_new_3_i_phi_fu_169_p8;
    end else begin
        ap_sig_allocacmp_tmp_len_V = cmd_len_V;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op32_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op61_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op60_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op59_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op58_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        cmdOut_V_TDATA_blk_n = cmdOut_V_TREADY_int;
    end else begin
        cmdOut_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_281)) begin
        if ((ap_predicate_op45_write_state2 == 1'b1)) begin
            cmdOut_V_TDATA_int = tmp_3_fu_329_p3;
        end else if ((ap_predicate_op43_write_state2 == 1'b1)) begin
            cmdOut_V_TDATA_int = tmp_4_fu_321_p3;
        end else if ((ap_predicate_op36_write_state2 == 1'b1)) begin
            cmdOut_V_TDATA_int = tmp_1_fu_298_p1;
        end else if ((ap_predicate_op32_write_state2 == 1'b1)) begin
            cmdOut_V_TDATA_int = tmp_2_fu_280_p3;
        end else begin
            cmdOut_V_TDATA_int = 'bx;
        end
    end else begin
        cmdOut_V_TDATA_int = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op45_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op43_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op36_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op32_write_state2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        cmdOut_V_TVALID_int = 1'b1;
    end else begin
        cmdOut_V_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        pageOffsetFifo_V_blk_n = pageOffsetFifo_V_empty_n;
    end else begin
        pageOffsetFifo_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op10_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pageOffsetFifo_V_read = 1'b1;
    end else begin
        pageOffsetFifo_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_1_fu_306_p2 = (trunc_ln321_reg_368 + zext_ln700_fu_303_p1);

assign add_ln700_fu_259_p2 = (ap_sig_allocacmp_cmd_load + 48'd2097152);

assign add_ln701_fu_265_p2 = ($signed(ap_sig_allocacmp_tmp_len_V) + $signed(32'd4292870144));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((regslice_both_cmdOut_V_U_apdone_blk == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((pageOffsetFifo_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((pageOffsetFifo_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_cmdOut_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((pageOffsetFifo_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_cmdOut_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | ((pageOffsetFifo_V_empty_n == 1'b0) & (ap_predicate_op10_read_state1 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_io = (((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op45_write_state2 == 1'b1)) | ((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op43_write_state2 == 1'b1)) | ((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op36_write_state2 == 1'b1)) | ((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op32_write_state2 == 1'b1)));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = (((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op61_write_state3 == 1'b1)) | ((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op60_write_state3 == 1'b1)) | ((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op59_write_state3 == 1'b1)) | ((cmdOut_V_TREADY_int == 1'b0) & (ap_predicate_op58_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (regslice_both_cmdOut_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_condition_140 = ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_251 = ((tmp_nbreadreq_fu_74_p3 == 1'd1) & (icmp_ln895_1_fu_241_p2 == 1'd0) & (bc_state == 1'd0));
end

always @ (*) begin
    ap_condition_263 = ((icmp_ln895_1_fu_241_p2 == 1'd1) & (tmp_nbreadreq_fu_74_p3 == 1'd1) & (bc_state == 1'd0));
end

always @ (*) begin
    ap_condition_281 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_cmd_addr_V_flag_2_i_reg_95 = 'bx;

assign ap_phi_reg_pp0_iter0_cmd_addr_V_flag_3_i_reg_129 = 'bx;

assign ap_phi_reg_pp0_iter0_cmd_addr_V_new_2_i_reg_107 = 'bx;

assign ap_phi_reg_pp0_iter0_cmd_addr_V_new_3_i_reg_149 = 'bx;

assign ap_phi_reg_pp0_iter0_cmd_len_V_new_2_i_reg_118 = 'bx;

assign ap_phi_reg_pp0_iter0_cmd_len_V_new_3_i_reg_165 = 'bx;

always @ (*) begin
    ap_predicate_op10_read_state1 = ((tmp_nbreadreq_fu_74_p3 == 1'd1) & (bc_state == 1'd0));
end

always @ (*) begin
    ap_predicate_op32_write_state2 = ((tmp_reg_364 == 1'd1) & (icmp_ln895_1_reg_389 == 1'd0) & (bc_state_load_reg_350 == 1'd0));
end

always @ (*) begin
    ap_predicate_op36_write_state2 = ((icmp_ln895_1_reg_389 == 1'd1) & (tmp_reg_364 == 1'd1) & (bc_state_load_reg_350 == 1'd0));
end

always @ (*) begin
    ap_predicate_op43_write_state2 = ((bc_state_load_reg_350 == 1'd1) & (icmp_ln895_reg_393 == 1'd0));
end

always @ (*) begin
    ap_predicate_op45_write_state2 = ((icmp_ln895_reg_393 == 1'd1) & (bc_state_load_reg_350 == 1'd1));
end

always @ (*) begin
    ap_predicate_op58_write_state3 = ((tmp_reg_364_pp0_iter1_reg == 1'd1) & (bc_state_load_reg_350_pp0_iter1_reg == 1'd0) & (icmp_ln895_1_reg_389_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op59_write_state3 = ((icmp_ln895_1_reg_389_pp0_iter1_reg == 1'd1) & (tmp_reg_364_pp0_iter1_reg == 1'd1) & (bc_state_load_reg_350_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op60_write_state3 = ((bc_state_load_reg_350_pp0_iter1_reg == 1'd1) & (icmp_ln895_reg_393_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op61_write_state3 = ((bc_state_load_reg_350_pp0_iter1_reg == 1'd1) & (icmp_ln895_reg_393_pp0_iter1_reg == 1'd1));
end

assign bc_state_load_load_fu_181_p1 = bc_state;

assign cmdOut_V_TVALID = regslice_both_cmdOut_V_U_vld_out;

assign icmp_ln895_1_fu_241_p2 = ((ret_V_fu_235_p2 > 33'd2097152) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_253_p2 = ((ap_sig_allocacmp_tmp_len_V > 32'd2097152) ? 1'b1 : 1'b0);

assign lhs_V_fu_227_p1 = tmp_page_offset_V_lo_fu_207_p4;

assign ret_V_fu_235_p2 = (lhs_V_fu_227_p1 + rhs_V_fu_231_p1);

assign rhs_V_fu_231_p1 = tmp_len_V_2_fu_197_p4;

assign sub_ln701_fu_312_p2 = (tmp_len_V_2_reg_375 - tmp_len_V_1_fu_288_p1);

assign tmp_1_fu_298_p1 = tmp_5_i_fu_291_p3;

assign tmp_2_fu_280_p3 = {{tmp_len_V_2_reg_375}, {tmp_addr_V_1_fu_277_p1}};

assign tmp_3_fu_329_p3 = {{32'd2097152}, {tmp_addr_V_fu_318_p1}};

assign tmp_4_fu_321_p3 = {{tmp_len_V_reg_359}, {tmp_addr_V_fu_318_p1}};

assign tmp_5_i_fu_291_p3 = {{tmp_new_length_V_loa_reg_382}, {tmp_addr_V_1_fu_277_p1}};

assign tmp_addr_V_1_fu_277_p1 = trunc_ln321_reg_368;

assign tmp_addr_V_fu_318_p1 = cmd_load_reg_354;

assign tmp_len_V_1_fu_288_p1 = tmp_new_length_V_loa_reg_382;

assign tmp_len_V_2_fu_197_p4 = {{pageOffsetFifo_V_dout[79:48]}};

assign tmp_nbreadreq_fu_74_p3 = pageOffsetFifo_V_empty_n;

assign tmp_page_offset_V_lo_fu_207_p4 = {{pageOffsetFifo_V_dout[103:80]}};

assign trunc_ln321_fu_193_p1 = pageOffsetFifo_V_dout[47:0];

assign zext_ln700_fu_303_p1 = tmp_new_length_V_loa_reg_382;

endmodule //boundary_check
